AUTHENTICATION
add authentication to the profession route so only 'developer' and 'expert' users can use them

DATA
decide on the content and fields of the profession DONE.
decide on the content and fields of the training object DONE.

create dummy data for training (5 docs) DONE.
create dummy data for profession (5 docs) DONE.

create a route and a controller to get all training and the minimal training object DONE.

create a postman workspace DONE.

create an adding professions function and route. DONE.

add one to test the populate DONE.

create a controller and route to get all professions.(and populate the training object). DONE.

DONE. create a route and function to add trainingIds to professions (by training name/id and profession name/id?) DONE.

DONE. create a user model. DONE.

DONE. create addUser controller and route DONE.
DONE. create addTraining controller and route DONE.
DONE. add to minimal profession the id's array DONE.

DONE. create getAllUsers controller and route DONE.
DONE. add/modify login so it only returns successful/unsuccessful login DONE.
DONE. create updateUser controller and route DONE.

OPTIONAL TOUCH UPS
FOR_END.add/modify authentication so it uses jwt in the request headers authorization.
FOR_END.add/modify authentication so failure stops the middleware chain and sends an error to the client
FOR_END.choose which routes to protect and modify them
FOR_END.modify the protected routes authorization so it will use a global variable with the jwt token.